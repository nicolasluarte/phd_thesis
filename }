library(tidymodels)
library(lme4)
library(lmerTest)
library(sjPlot)
library(sjmisc)
library(emmeans)
library(zoo)

df <- readRDS("data.rds")

# function to transform date to sessions
date2s <- function(date.vec) {
	sort(date.vec) %>%
		diff() %>%
		{ if_else(. > 0, 1, 0) } %>%
		cumsum() -> session
	session <- c(1,session + 1)
	return(session)
}
df <- df[order(df$date),]
df$session <- date2s(df$date)

df %>% filter(session == 1, raton == 217) %>% select(licksCum)

# scale and center
df %>%
	group_by(raton, condition) %>%
	mutate(
	       sumLicksScaled = scale(sumLicks, center = TRUE, scale = TRUE),
	       sumEventsScaled = scale(sumEvents, center = TRUE, scale = TRUE),
	       sumRewardsScaled = scale(sumRewards, center = TRUE, scale = TRUE)
	       ) %>%
	ungroup() -> df

# model 1: licks in two conditions



# prepare data
df %>%
	filter(date < "2021-06-04") %>%
	group_by(raton, expGroup, condition, session, date) %>%
	summarise(sumLicks = unique(sumLicks)) -> df.licks
df.licks %>%
	group_by(raton, condition) %>%
	mutate(baselineLicks = mean(sumLicks)) %>%
	pivot_wider(names_prefix = c("pre", "post"),
		    values_from = baselineLicks) %>%
	mutate(baselineLicks = zoo::na.locf(pre)) -> df.licks
df.licks %>%
	group_by(raton) %>%
	mutate(baselineLicks = scale(baselineLicks, center = TRUE, scale = TRUE)) -> df.licks

# model 0
model.0.l <- glmer.nb((sumLicks) ~ (1 | raton) +
		      condition * expGroup * session + baselineLicks,
	  data = df.licks)
summary(model.0.l)
	

model.licks.1.fit <- lmer(data = df.licks,
		log(sumLicks) ~ (1 | raton) + condition * session + log(baselineLicks))
summary(model.licks.1.fit)

model.licks.null <- lmer(data = df.licks %>% filter(condition == "pre", date >= "2021-05-05"),
		sumLicks ~ (1  | raton) + expGroup)
plot_model(model.licks.null)
summary(model.licks.null)
emmeans(model.licks.null, ~expGroup)


emmip(model.licks.1.fit, ~condition, CIs = TRUE)

(emmeans(model.licks.1.fit, pairwise~condition))
test(emmeans(model.licks.1.fit, ~condition*expGroup))

# model 1 plots
plot_model(model.licks.1.fit, show.values = TRUE,
	   vline.color = "black",
	   value.offset = .4,
	   line.size = 0.25)

plot_model(model.licks.1.fit, type = "eff", term = c("session", "condition"))


# events
model.null.events <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumEvents ~ (1 | raton) + expGroup)
model.0.events <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumEvents ~ (1 | raton) + expGroup * condition)
model.1.events <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumEvents ~ (condition | raton) + expGroup * condition)
model.2.events <- lmer(data = df,
	sumEvents ~ (condition | raton) + expGroup * condition * session)
summary(model.2.events)

model.2.events <- lmer(data = df ,
	sumLicks ~ (condition | raton) + expGroup * condition * session)
summary(model.2.events)

# comparison
model.2.events.null <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumEvents ~ (condition | raton) + expGroup * session, REML = TRUE)
model.2.events.alt <- lmer(data = df %>% filter(date < "2021-06-04"),
	sumEvents ~ (condition | raton) + expGroup * condition * session, REML = TRUE)
model.2.licks.alt <- lmer(data = df %>% filter(date < "2021-06-04"),
	sumLicks ~ (condition | raton) + expGroup * condition * session, REML = TRUE)
model.2.events.full <- lmer(data = df,
	sumEvents ~ (condition | raton) + expGroup * condition * session, REML = TRUE)

model.3.events.alt <- lmer(data = df %>% filter(date >= "2021-05-10", date <= "2021-05-14"),
	sumEvents ~ (condition | raton) + expGroup * condition * session, REML = TRUE)
summary(model.3.events.alt)
plot_model(model.3.events.alt, type = "pred", term = c("expGroup", "condition"))

model.3.events.alt <- lmer(data = df %>% filter(date >= "2021-05-10", date <= "2021-05-14"),
	sumEvents ~ (condition | raton) + expGroup * condition * session * sumLicksScaled, REML = TRUE)
summary(model.3.events.alt)
plot_model(model.3.events.alt, type = "pred", term = c("expGroup", "condition", "sumLicksScaled"))


model.5.events.alt <- lmer(data = df %>% filter(date < "2021-06-04",
						expGroup == "treatment",
						condition == "post"),
	licksPerSpout ~ (1 | raton) + randomSpout, REML = TRUE)
anova(model.5.events.alt)
summary(model.5.events.alt)

model.5.events.alt <- lmer(data = df %>% filter(date < "2021-06-04",
						expGroup == "treatment",
						condition == "post"
						),
	rewardsPerSpout ~ (1 | raton) + randomSpout * spoutNumber)
summary(model.5.events.alt)
anova(model.5.events.alt)
plot_model(model.5.events.alt, type = "pred", term = c("spoutNumber", "randomSpout"))

df %>% filter(expGroup == "treatment", condition == "post") %>%
	group_by(spoutNumber, randomSpout) %>%
	summarise(b = mean(eventsPerSpout))


options(browser = 'brave')
tab_model(model.2.events.alt)

options(browser = 'brave')
tab_model(model.3.events.alt)

plot(model.2.events.alt)

options(browser = 'brave')
tab_model(model.2.licks.alt)

plot_model(model.2.licks.alt, type = "pred", term = c("session", "expGroup", "condition"))
anova(model.2.licks.alt)


model.2.plot <- plot_model(model.2, type = "int", term = c("condition", "expGroup"))

plot_model(model.2.events.alt, type = "pred", term = c("session", "expGroup", "condition")) +
	theme_bw()

df.model <- df %>% filter(date < "2021-06-04")
df.model$model.2.fit <- predict(model.2.licks.alt)
df.model %>%
	ggplot(aes(session, model.2.fit, color = expGroup)) +
	geom_line() +
	geom_point(aes(session, sumLicks)) +
	facet_grid(condition ~ raton)

df.model <- df %>% filter(date < "2021-06-04", condition == "post", expGroup == "treatment")
df.model$model.2.fit <- predict(model.5.events.alt)
df.model %>%
	ggplot(aes(session, model.2.fit, color = randomSpout)) +
	geom_line() +
	geom_point(aes(session, licksPerSpout, color = randomSpout)) +
	facet_grid(spoutNumber~raton)


plot_model(model.2.events, type = "re")

fixef(model.2.events)

fixef(model.2.events)

model.2.events <- lmer(data = df %>% filter(condition == "post"),
	sumEvents ~ (1 | raton) + expGroup * session)
summary(model.2.events)

# licks
model.null.licks <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumLicks ~ (1 | raton) + expGroup)
model.0.licks <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumLicks ~ (1 | raton) + expGroup * condition)
model.1.licks <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumLicks ~ (condition | raton) + expGroup * condition)
model.2.licks <- lmer(data = df %>% filter(date >= "2021-05-05"),
	sumLicks ~ (condition | raton) + expGroup * condition * date)
summary(model.2.licks)
anova(model.null, model.0, model.1, model.2)
model.2.plot <- plot_model(model.2, type = "int", term = c("condition", "expGroup"))
plot_model(model.2, type = "pred", term = c("session[1:29]", "expGroup", "condition"))
plot_model(model.2, type = "pred", term = c("session", "condition", "expGroup"))

plot(model.2)

options(browser = 'brave')
tab_model(model.2.events)


df %>%
	ggplot(aes(as.factor(session), sumEvents, color = expGroup)) +
	geom_boxplot()

# lick density
df %>%
	filter(expGroup == "treatment", msFromEvents < 1000, msFromEvents > 0) %>%
	ggplot(aes(msFromEvents)) +
	geom_density(aes(y = ..scaled..)) +
	facet_grid(condition~raton~rewardedTrial, scales = "free")

df %>% filter(raton == 219, condition == "post", randomSpout == "variable") %>%
	select(isEvent, isReward, rewardedTrial, eventsCum) %>%
	View()


